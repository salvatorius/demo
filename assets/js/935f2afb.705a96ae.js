"use strict";(self.webpackChunkcafenet=self.webpackChunkcafenet||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"El Camino de Python","href":"/demo/docs/intro","docId":"intro"},{"type":"category","label":"Tutorial - Primeros Pasos","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Conceptos B\xe1sicos de Python","href":"/demo/docs/tutorial-basics/conceptos-basicos","docId":"tutorial-basics/conceptos-basicos"}],"href":"/demo/docs/category/tutorial---primeros-pasos"},{"type":"category","label":"Generadores","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Yield y los Generadores","href":"/demo/docs/python-generators/overview","docId":"python-generators/overview"},{"type":"link","label":"Yield","href":"/demo/docs/python-generators/yield","docId":"python-generators/yield"},{"type":"link","label":"Ejemplo: Pares","href":"/demo/docs/python-generators/ejemplo-basico","docId":"python-generators/ejemplo-basico"},{"type":"link","label":"Generadores Finitos","href":"/demo/docs/python-generators/generador-finito","docId":"python-generators/generador-finito"},{"type":"link","label":"Generadores Infinitos","href":"/demo/docs/python-generators/generador-infinito","docId":"python-generators/generador-infinito"}],"href":"/demo/docs/category/generadores"}]},"docs":{"intro":{"id":"intro","title":"El Camino de Python","description":"Bienvenid@s a nuestro tutorial de Python, dise\xf1ado para aquellos que desean aprender a programar en Python desde cero o que desean mejorar sus habilidades existentes.","sidebar":"tutorialSidebar"},"python-generators/ejemplo-basico":{"id":"python-generators/ejemplo-basico","title":"Ejemplo: Pares","description":"Ahora pasemos a mirar c\xf3mo deber\xeda lucir (t\xedpicamente) el cuerpo de esa funci\xf3n generador con la instrucci\xf3n yield, con un ejemplo muy b\xe1sico, pero completo y funcional:","sidebar":"tutorialSidebar"},"python-generators/generador-finito":{"id":"python-generators/generador-finito","title":"Generadores Finitos","description":"En ese ejemplo anterior, tal como lo definimos, el c\xf3digo que define al generador, se basa en un bucle for de t\xe9rminos finitos:","sidebar":"tutorialSidebar"},"python-generators/generador-infinito":{"id":"python-generators/generador-infinito","title":"Generadores Infinitos","description":"En este ejemplo, vamos a crear un generador que devuelva una secuencia de Fibonacci. La secuencia de Fibonacci es una secuencia de n\xfameros en la que cada n\xfamero es la suma de los dos n\xfameros anteriores. Por ejemplo, la secuencia comienza con 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, ...","sidebar":"tutorialSidebar"},"python-generators/overview":{"id":"python-generators/overview","title":"Yield y los Generadores","description":"\xa1Hola! No! No es el nombre de una banda retro de cumbia-rock. Hoy vamos a hablar sobre el uso de la instrucci\xf3n yield en Python, y de los \xfatiles generadores que podemos crear con ella; los cuales, b\xe1sicamente, son funciones que pueden pausar su ejecuci\xf3n y guardar su estado para continuar en el mismo punto en una llamada posterior.","sidebar":"tutorialSidebar"},"python-generators/yield":{"id":"python-generators/yield","title":"Yield","description":"La instrucci\xf3n yield es la que utilizaremos para definir un generador en Python. Cuando el int\xe9rprete de python encuentra la instrucci\xf3n yield dentro de una funci\xf3n, esa funci\xf3n producir\xe1 entonces un generador, que podremos utilizar para iterar sobre esta secuencia de valores de retorno o respuestas (una nueva en cada solicitud que se le haga)","sidebar":"tutorialSidebar"},"tutorial-basics/conceptos-basicos":{"id":"tutorial-basics/conceptos-basicos","title":"Conceptos B\xe1sicos de Python","description":"Variables y tipos de datos","sidebar":"tutorialSidebar"}}}')}}]);